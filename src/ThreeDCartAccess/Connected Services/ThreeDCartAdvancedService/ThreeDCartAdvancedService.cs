//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ThreeDCartAccess.cartAPIAdvanced
{
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://3dcart.com/", ConfigurationName="ThreeDCartAccess.cartAPIAdvanced.cartAPIAdvancedSoap")]
    internal interface cartAPIAdvancedSoap
    {
        
        // CODEGEN: Generating message contract since element name storeUrl from namespace http://3dcart.com/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://3dcart.com/runQuery", ReplyAction="*")]
        ThreeDCartAccess.cartAPIAdvanced.runQueryResponse runQuery(ThreeDCartAccess.cartAPIAdvanced.runQueryRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://3dcart.com/runQuery", ReplyAction="*")]
        System.Threading.Tasks.Task<ThreeDCartAccess.cartAPIAdvanced.runQueryResponse> runQueryAsync(ThreeDCartAccess.cartAPIAdvanced.runQueryRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    internal partial class runQueryRequest
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="runQuery", Namespace="http://3dcart.com/", Order=0)]
        public ThreeDCartAccess.cartAPIAdvanced.runQueryRequestBody Body;
        
        public runQueryRequest()
        {
        }
        
        public runQueryRequest(ThreeDCartAccess.cartAPIAdvanced.runQueryRequestBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://3dcart.com/")]
    internal partial class runQueryRequestBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string storeUrl;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=1)]
        public string userKey;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=2)]
        public string sqlStatement;
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=3)]
        public string callBackURL;
        
        public runQueryRequestBody()
        {
        }
        
        public runQueryRequestBody(string storeUrl, string userKey, string sqlStatement, string callBackURL)
        {
            this.storeUrl = storeUrl;
            this.userKey = userKey;
            this.sqlStatement = sqlStatement;
            this.callBackURL = callBackURL;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    internal partial class runQueryResponse
    {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="runQueryResponse", Namespace="http://3dcart.com/", Order=0)]
        public ThreeDCartAccess.cartAPIAdvanced.runQueryResponseBody Body;
        
        public runQueryResponse()
        {
        }
        
        public runQueryResponse(ThreeDCartAccess.cartAPIAdvanced.runQueryResponseBody Body)
        {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://3dcart.com/")]
    internal partial class runQueryResponseBody
    {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Xml.XmlElement runQueryResult;
        
        public runQueryResponseBody()
        {
        }
        
        public runQueryResponseBody(System.Xml.XmlElement runQueryResult)
        {
            this.runQueryResult = runQueryResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    internal interface cartAPIAdvancedSoapChannel : ThreeDCartAccess.cartAPIAdvanced.cartAPIAdvancedSoap, System.ServiceModel.IClientChannel
    {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Tools.ServiceModel.Svcutil", "2.0.3")]
    internal partial class cartAPIAdvancedSoapClient : System.ServiceModel.ClientBase<ThreeDCartAccess.cartAPIAdvanced.cartAPIAdvancedSoap>, ThreeDCartAccess.cartAPIAdvanced.cartAPIAdvancedSoap
    {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public cartAPIAdvancedSoapClient(EndpointConfiguration endpointConfiguration) : 
                base(cartAPIAdvancedSoapClient.GetBindingForEndpoint(endpointConfiguration), cartAPIAdvancedSoapClient.GetEndpointAddress(endpointConfiguration))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public cartAPIAdvancedSoapClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(cartAPIAdvancedSoapClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress))
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public cartAPIAdvancedSoapClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(cartAPIAdvancedSoapClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress)
        {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public cartAPIAdvancedSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress)
        {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        ThreeDCartAccess.cartAPIAdvanced.runQueryResponse ThreeDCartAccess.cartAPIAdvanced.cartAPIAdvancedSoap.runQuery(ThreeDCartAccess.cartAPIAdvanced.runQueryRequest request)
        {
            return base.Channel.runQuery(request);
        }
        
        public System.Xml.XmlElement runQuery(string storeUrl, string userKey, string sqlStatement, string callBackURL)
        {
            ThreeDCartAccess.cartAPIAdvanced.runQueryRequest inValue = new ThreeDCartAccess.cartAPIAdvanced.runQueryRequest();
            inValue.Body = new ThreeDCartAccess.cartAPIAdvanced.runQueryRequestBody();
            inValue.Body.storeUrl = storeUrl;
            inValue.Body.userKey = userKey;
            inValue.Body.sqlStatement = sqlStatement;
            inValue.Body.callBackURL = callBackURL;
            ThreeDCartAccess.cartAPIAdvanced.runQueryResponse retVal = ((ThreeDCartAccess.cartAPIAdvanced.cartAPIAdvancedSoap)(this)).runQuery(inValue);
            return retVal.Body.runQueryResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<ThreeDCartAccess.cartAPIAdvanced.runQueryResponse> ThreeDCartAccess.cartAPIAdvanced.cartAPIAdvancedSoap.runQueryAsync(ThreeDCartAccess.cartAPIAdvanced.runQueryRequest request)
        {
            return base.Channel.runQueryAsync(request);
        }
        
        public System.Threading.Tasks.Task<ThreeDCartAccess.cartAPIAdvanced.runQueryResponse> runQueryAsync(string storeUrl, string userKey, string sqlStatement, string callBackURL)
        {
            ThreeDCartAccess.cartAPIAdvanced.runQueryRequest inValue = new ThreeDCartAccess.cartAPIAdvanced.runQueryRequest();
            inValue.Body = new ThreeDCartAccess.cartAPIAdvanced.runQueryRequestBody();
            inValue.Body.storeUrl = storeUrl;
            inValue.Body.userKey = userKey;
            inValue.Body.sqlStatement = sqlStatement;
            inValue.Body.callBackURL = callBackURL;
            return ((ThreeDCartAccess.cartAPIAdvanced.cartAPIAdvancedSoap)(this)).runQueryAsync(inValue);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync()
        {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.cartAPIAdvancedSoap))
            {
                System.ServiceModel.BasicHttpBinding result = new System.ServiceModel.BasicHttpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                result.AllowCookies = true;
                result.Security.Mode = System.ServiceModel.BasicHttpSecurityMode.Transport;
                return result;
            }
            if ((endpointConfiguration == EndpointConfiguration.cartAPIAdvancedSoap12))
            {
                System.ServiceModel.Channels.CustomBinding result = new System.ServiceModel.Channels.CustomBinding();
                System.ServiceModel.Channels.TextMessageEncodingBindingElement textBindingElement = new System.ServiceModel.Channels.TextMessageEncodingBindingElement();
                textBindingElement.MessageVersion = System.ServiceModel.Channels.MessageVersion.CreateVersion(System.ServiceModel.EnvelopeVersion.Soap12, System.ServiceModel.Channels.AddressingVersion.None);
                result.Elements.Add(textBindingElement);
                System.ServiceModel.Channels.HttpsTransportBindingElement httpsBindingElement = new System.ServiceModel.Channels.HttpsTransportBindingElement();
                httpsBindingElement.AllowCookies = true;
                httpsBindingElement.MaxBufferSize = int.MaxValue;
                httpsBindingElement.MaxReceivedMessageSize = int.MaxValue;
                result.Elements.Add(httpsBindingElement);
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration)
        {
            if ((endpointConfiguration == EndpointConfiguration.cartAPIAdvancedSoap))
            {
                return new System.ServiceModel.EndpointAddress("https://api.3dcart.com/cart_advanced.asmx");
            }
            if ((endpointConfiguration == EndpointConfiguration.cartAPIAdvancedSoap12))
            {
                return new System.ServiceModel.EndpointAddress("https://api.3dcart.com/cart_advanced.asmx");
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        public enum EndpointConfiguration
        {
            
            cartAPIAdvancedSoap,
            
            cartAPIAdvancedSoap12,
        }
    }
}
